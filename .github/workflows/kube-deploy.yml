name: Deploy on kubernetes

on:
  workflow_run:
    workflows:
      - Build and Deploy Docker Image
    types:
      - completed

env:
  PROJECT_ID: ${{ secrets.GKE_CLUSTER }}
  GKE_CLUSTER: gke-cluster    # Add your cluster name here.
  GKE_ZONE: me-central1-a   # Add your cluster zone here.
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  IMAGE: static-site
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Allow GitHub to generate the OIDC token
      contents: read   # Optional: For repository access
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Google Cloud authentication
      - name: Authenticate to Google Cloud using Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
            service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
            workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}


          

        # Set up kubectl to use GKE
#      - name: Set up kubectl
#        run: |
#          gcloud container clusters get-credentials gke-cluster \
#            --zone me-central1-a \
#            --project ${{ secrets.GCP_PROJECT_ID }}
      - run: |-
          gcloud --quiet auth configure-docker

      - name: auth gc
        uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      # Optionally, you can verify kubectl is connected to your cluster
      - name: Verify kubectl config
        run: kubectl get nodes

      - name: Import Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v2
        with:
            url: ${{ secrets.VAULT_ADDR }}
            token: ${{ secrets.VAULT_TOKEN }}
            secrets: |
              secret/data/democloud/config topsecret | TOP_SECRET_ENV_VAR
            

      - name: Use the Vault secret
        run: |
              echo "The topsecret is  $TOP_SECRET_ENV_VAR"
      - name: Debug Environment Variables
        run: env | grep TOP_SECRET_ENV_VAR
      - name: Replace placeholders
        run: |
            sed -i "s|\${IMAGE_TAG}|${{ env.commit }}|g" manifest/deployment.yaml
            sed -i "s|\${TOP_SECRET}|$TOP_SECRET|g" manifest/deployment.yaml

      - name: Apply Kubernetes manifest
        run: |
            kubectl apply -f manifest/deployment.yaml